
package com.example.chivas.dbres.db.objectbox.entity;

import com.example.chivas.dbres.db.objectbox.entity.SimpleIndexedEntityCursor.Factory;
import io.objectbox.EntityInfo;
import io.objectbox.annotation.apihint.Internal;
import io.objectbox.internal.CursorFactory;
import io.objectbox.internal.IdGetter;

// THIS CODE IS GENERATED BY ObjectBox, DO NOT EDIT.

/**
 * Properties for entity "SimpleIndexedEntity". Can be used for QueryBuilder and for referencing DB names.
 */
public final class SimpleIndexedEntity_ implements EntityInfo<SimpleIndexedEntity> {

    // Leading underscores for static constants to avoid naming conflicts with property names

    public static final String __ENTITY_NAME = "SimpleIndexedEntity";

    public static final int __ENTITY_ID = 3;

    public static final Class<SimpleIndexedEntity> __ENTITY_CLASS = SimpleIndexedEntity.class;

    public static final String __DB_NAME = "SimpleIndexedEntity";

    public static final CursorFactory<SimpleIndexedEntity> __CURSOR_FACTORY = new Factory();

    @Internal
    static final SimpleIndexedEntityIdGetter __ID_GETTER = new SimpleIndexedEntityIdGetter();

    public final static SimpleIndexedEntity_ __INSTANCE = new SimpleIndexedEntity_();

    public final static io.objectbox.Property<SimpleIndexedEntity> _id =
        new io.objectbox.Property<>(__INSTANCE, 0, 1, long.class, "_id", true, "_id");

    public final static io.objectbox.Property<SimpleIndexedEntity> simpleBoolean =
        new io.objectbox.Property<>(__INSTANCE, 1, 2, boolean.class, "simpleBoolean");

    public final static io.objectbox.Property<SimpleIndexedEntity> simpleByte =
        new io.objectbox.Property<>(__INSTANCE, 2, 3, byte.class, "simpleByte");

    public final static io.objectbox.Property<SimpleIndexedEntity> simpleShort =
        new io.objectbox.Property<>(__INSTANCE, 3, 4, short.class, "simpleShort");

    public final static io.objectbox.Property<SimpleIndexedEntity> simpleInt =
        new io.objectbox.Property<>(__INSTANCE, 4, 5, int.class, "simpleInt");

    public final static io.objectbox.Property<SimpleIndexedEntity> simpleLong =
        new io.objectbox.Property<>(__INSTANCE, 5, 6, long.class, "simpleLong");

    public final static io.objectbox.Property<SimpleIndexedEntity> simpleFloat =
        new io.objectbox.Property<>(__INSTANCE, 6, 7, float.class, "simpleFloat");

    public final static io.objectbox.Property<SimpleIndexedEntity> simpleDouble =
        new io.objectbox.Property<>(__INSTANCE, 7, 8, double.class, "simpleDouble");

    public final static io.objectbox.Property<SimpleIndexedEntity> simpleString =
        new io.objectbox.Property<>(__INSTANCE, 8, 9, String.class, "simpleString");

    public final static io.objectbox.Property<SimpleIndexedEntity> simpleByteArray =
        new io.objectbox.Property<>(__INSTANCE, 9, 10, byte[].class, "simpleByteArray");

    @SuppressWarnings("unchecked")
    public final static io.objectbox.Property<SimpleIndexedEntity>[] __ALL_PROPERTIES = new io.objectbox.Property[]{
        _id,
        simpleBoolean,
        simpleByte,
        simpleShort,
        simpleInt,
        simpleLong,
        simpleFloat,
        simpleDouble,
        simpleString,
        simpleByteArray
    };

    public final static io.objectbox.Property<SimpleIndexedEntity> __ID_PROPERTY = _id;

    @Override
    public String getEntityName() {
        return __ENTITY_NAME;
    }

    @Override
    public int getEntityId() {
        return __ENTITY_ID;
    }

    @Override
    public Class<SimpleIndexedEntity> getEntityClass() {
        return __ENTITY_CLASS;
    }

    @Override
    public String getDbName() {
        return __DB_NAME;
    }

    @Override
    public io.objectbox.Property<SimpleIndexedEntity>[] getAllProperties() {
        return __ALL_PROPERTIES;
    }

    @Override
    public io.objectbox.Property<SimpleIndexedEntity> getIdProperty() {
        return __ID_PROPERTY;
    }

    @Override
    public IdGetter<SimpleIndexedEntity> getIdGetter() {
        return __ID_GETTER;
    }

    @Override
    public CursorFactory<SimpleIndexedEntity> getCursorFactory() {
        return __CURSOR_FACTORY;
    }

    @Internal
    static final class SimpleIndexedEntityIdGetter implements IdGetter<SimpleIndexedEntity> {
        @Override
        public long getId(SimpleIndexedEntity object) {
            return object._id;
        }
    }

}
